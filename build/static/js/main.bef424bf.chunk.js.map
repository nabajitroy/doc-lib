{"version":3,"sources":["components/create-todo.component.js","components/edit-todo.component.js","components/todoItem.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["CreateTodo","props","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodotag","onChangeTododocGroups","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","todo_tag","id","value","isChecked","todo_docGroup","loader","e","this","setState","target","tags","console","log","forEach","tag","checked","preventDefault","todo","map","index","push","newTodo","todo_docgroup","axios","post","then","res","data","todo_doc_id","window","open","catch","err","style","marginTop","className","type","onChange","key","name","docGroup","Component","EditTodo","onChangeTodoPriority","onChangeTodoCompleted","get","match","params","response","error","put","level","TodoItem","todos","itemToDelete","to","_id","href","onClick","handleDelete","React","TodosList","delete","findIndex","x","array","splice","currentTodo","getList","App","src","logo","width","height","alt","path","exact","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bef424bf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport { BoxLoading } from \"react-loadingg\";\r\nexport default class CreateTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n    this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n    //  this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n    this.onChangeTodotag = this.onChangeTodotag.bind(this);\r\n    this.onChangeTododocGroups = this.onChangeTododocGroups.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      todo_description: \"\",\r\n      todo_responsible: \"\",\r\n      todo_priority: \"\",\r\n      todo_completed: false,\r\n      todo_tag: [\r\n        { id: 1, value: \"ERP-system\", isChecked: false },\r\n        { id: 2, value: \"IT Manual\", isChecked: false },\r\n        { id: 3, value: \"Lotus Notes\", isChecked: false },\r\n        { id: 4, value: \"IT-Client\", isChecked: false },\r\n        { id: 5, value: \"IT Organisation\", isChecked: false },\r\n        { id: 6, value: \"MS Office\", isChecked: false },\r\n        { id: 7, value: \"T-Emergency\", isChecked: false }\r\n      ],\r\n      todo_docGroup: false,\r\n      loader: false\r\n    };\r\n  }\r\n  onChangeTodoDescription(e) {\r\n    this.setState({\r\n      todo_description: e.target.value\r\n    });\r\n  }\r\n  onChangeTodoResponsible(e) {\r\n    this.setState({\r\n      todo_responsible: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTodotag(e) {\r\n    let tags = this.state.todo_tag;\r\n    console.log(tags);\r\n    tags.forEach(tag => {\r\n      if (tag.value === e.target.value) tag.isChecked = e.target.checked;\r\n    });\r\n    this.setState({ todo_tag: tags });\r\n  }\r\n  onChangeTododocGroups(e) {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      todo_docGroup: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    //  console.log(this.state.loader);\r\n    this.state.loader = true;\r\n    // console.log(this.state.loader);\r\n    var todo = [];\r\n    this.state.todo_tag.map((tag, index) => {\r\n      if (tag.isChecked === true) todo.push(tag.value);\r\n    });\r\n\r\n    const newTodo = {\r\n      todo_description: this.state.todo_description,\r\n      todo_responsible: this.state.todo_responsible,\r\n      todo_docgroup: this.state.todo_docGroup,\r\n      todo_tag: todo\r\n      // todo_priority: this.state.todo_priority\r\n    };\r\n\r\n    axios\r\n      .post(\"/todos\", newTodo)\r\n      .then(res => {\r\n        this.setState({\r\n          loader: false\r\n        });\r\n        console.log(res.data.todo.todo_doc_id);\r\n        this.state.loader = false;\r\n        window.open(\r\n          \"https://app.box.com/file/\" + res.data.todo.todo_doc_id,\r\n          \"_blank\" // <- This is what makes it open in a new window.\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    this.setState({\r\n      todo_description: \"\",\r\n      todo_responsible: \"\",\r\n      todo_priority: \"\",\r\n      todo_completed: false\r\n    });\r\n    //this.state.loader = false;\r\n    //  this.props.history.push(\"https://app.box.com/file/584099432267\");\r\n    // console.log(JSON.stringify(this.state));\r\n  }\r\n\r\n  sendSubmitSomewhere() {\r\n    window.open(\r\n      \"https://app.box.com/file/584099432267\",\r\n      \"_blank\" // <- This is what makes it open in a new window.\r\n    );\r\n  }\r\n  render() {\r\n    const priorities = [\"Low\", \"Medium\", \"High\"];\r\n    const tags = [\r\n      \"ERP-system\",\r\n      \"IT Manual\",\r\n      \"Lotus Notes\",\r\n      \"IT-Client\",\r\n      \"IT Organisation\",\r\n      \"MS Office\",\r\n      \"T-Emergency\"\r\n    ];\r\n\r\n    const docGroups = [\r\n      \"Bulletin board\",\r\n      \"General document\",\r\n      \"Product Documentation\",\r\n      \"QM documents\",\r\n      \"Contacts\",\r\n      \"Human resources\",\r\n      \"Project document\",\r\n      \"Statistics\"\r\n    ];\r\n\r\n    if (this.state.loader == true) {\r\n      return <BoxLoading />;\r\n    } else {\r\n      return (\r\n        <div style={{ marginTop: 10 }}>\r\n          <h3>Create New Document</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Description: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.todo_description}\r\n                onChange={this.onChangeTodoDescription}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Responsible: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.todo_responsible}\r\n                onChange={this.onChangeTodoResponsible}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group \">\r\n              <label className=\"form-check-label\">Tags:</label>\r\n              <div className=\"row\">\r\n                {tags.map((tag, index) => (\r\n                  <div className=\" col-sm-2 col\" key={index}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={tag}\r\n                      name=\"tagOptions\"\r\n                      onChange={this.onChangeTodotag}\r\n                    />\r\n                    {tag}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group \">\r\n              <label className=\"form-check-label\">Document Group:</label>\r\n              <div className=\"row\">\r\n                {docGroups.map((docGroup, index) => (\r\n                  <div className=\" col-sm-4 col\" key={index}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value={docGroup}\r\n                      name=\"docGroupOptions\"\r\n                      onChange={this.onChangeTododocGroups}\r\n                    />\r\n                    {docGroup}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Create Todo\"\r\n                className=\"btn btn-primary\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  } // end of loader if\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nexport default class EditTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n    this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n    this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n    this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      todo_description: \"\",\r\n      todo_responsible: \"\",\r\n      todo_priority: \"\",\r\n      todo_completed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/todos\" + this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          todo_description: response.data.todo_description,\r\n          todo_responsible: response.data.todo_responsible,\r\n          todo_priority: response.data.todo_priority,\r\n          todo_completed: response.data.todo_completed\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  onChangeTodoDescription(e) {\r\n    this.setState({\r\n      todo_description: e.target.value\r\n    });\r\n  }\r\n  onChangeTodoResponsible(e) {\r\n    this.setState({\r\n      todo_responsible: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTodoPriority(e) {\r\n    this.setState({\r\n      todo_priority: e.target.value\r\n    });\r\n  }\r\n  onChangeTodoCompleted(e) {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      todo_completed: e.target.value\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTodo = {\r\n      todo_description: this.state.todo_description,\r\n      todo_responsible: this.state.todo_responsible,\r\n      todo_priority: this.state.todo_priority,\r\n      todo_completed: this.state.todo_completed\r\n    };\r\n    console.log(this.state.todo_completed);\r\n    axios\r\n      .put(\"/todos\" + this.props.match.params.id, newTodo)\r\n      .then(res => {\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    const priorities = [\"Low\", \"Medium\", \"High\"];\r\n    return (\r\n      <div style={{ marginTop: 10 }}>\r\n        <h3>Update Toddo</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Description: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.todo_description}\r\n              onChange={this.onChangeTodoDescription}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Responsible: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.todo_responsible}\r\n              onChange={this.onChangeTodoResponsible}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {priorities.map((level, index) => (\r\n              <div className=\"form-check form-check-inline\" key={index}>\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"priorityOptions\"\r\n                  id={\"priority\" + level}\r\n                  key={index}\r\n                  value={level}\r\n                  checked={this.state.todo_priority === level}\r\n                  onChange={this.onChangeTodoPriority}\r\n                />\r\n                <label className=\"form-check-label\">{level}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Completed: </label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"completedCheckBox\"\r\n              value={this.state.todo_completed}\r\n              checked={this.state.todo_completed}\r\n              onChange={this.onChangeTodoCompleted}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Todo\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BoxLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nexport default class TodoItem extends React.Component {\r\n  /* handleDelete() {\r\n    console.log(\"Hellooo\");\r\n  }\r\n*/\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { todos: [] };\r\n    // this.handleDelete = this.handleDelete.bind(this);\r\n    // console.log(\"Todos -\" + JSON.stringify(this.props));\r\n  }\r\n\r\n  // handleDelete = id => {\r\n  // this.props.todos.shift();\r\n  // axios\r\n  //   .delete(\"http://localhost:5000/todos/\" + id)\r\n  //   .then(res => {\r\n  //     this.setState({ todos: this.props });\r\n  //     // this.setState(res => {\r\n  //     //   return {\r\n  //     //     items: [...res.items, res.data],\r\n  //     //     isLoading: false\r\n  //     //   };\r\n  //     // });\r\n  //   })\r\n  //   .catch(err => {\r\n  //     console.log(err);\r\n  //   });\r\n  // };\r\n  render() {\r\n    let todos = this.props.todo;\r\n    console.log(\"Hello there \" + this.props.itemToDelete);\r\n    //  return \"true\";\r\n\r\n    /*const tags = todos.todo_tag;\r\n    var data = \"\";\r\n    tags.map((val, i) => {\r\n      data += \",\" + val;\r\n    });\r\n    data.substring(1);*/\r\n\r\n    return (\r\n      <tr>\r\n        <td>{todos.todo_description}</td>\r\n        <td>{todos.todo_tag}</td>\r\n        <td>{todos.todo_docgroup} </td>\r\n        <td>{todos.todo_doc_id}</td>\r\n        <td>\r\n          <Link to={\"/edit/\" + todos._id}>Edit</Link>&nbsp;&nbsp;\r\n          <a\r\n            href=\"#\"\r\n            className=\"item-remove\"\r\n            onClick={e => this.props.handleDelete(todos._id)}\r\n          >\r\n            Delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    );\r\n    //  });\r\n\r\n    return <React.Fragment>{todos}</React.Fragment>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//import { Link } from \"react-router-dom\";\r\n//import TodoItem from \"./todoItem\";\r\nimport TodoItem from \"./todoItem\";\r\n\r\nimport { BoxLoading } from \"react-loadingg\";\r\nexport default class TodosList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { todos: [], loader: true };\r\n    this.state.loader = true;\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    //  this.handleDelete = this.handleDelete.bind(this);\r\n  }\r\n\r\n  handleDelete(id) {\r\n    /* console.log(\"Handle delete called \" + id);\r\n    this.state.itemToDelete = id;\r\n    let index = this.state.todos.findIndex(x => x._id === id);\r\n    var array = [...this.state.todos];\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ todos: array });\r\n    }*/\r\n\r\n    axios\r\n      .delete(\"/todos/\" + id)\r\n      .then(res => {\r\n        let index = this.state.todos.findIndex(x => x._id === id);\r\n        var array = [...this.state.todos];\r\n        if (index !== -1) {\r\n          array.splice(index, 1);\r\n          this.setState({ todos: array });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/todos\")\r\n      .then(res => {\r\n        this.setState({ todos: res.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getList() {\r\n    /*  if (this.state.loader === true) {\r\n      return <BoxLoading />;\r\n    } else {\r\n      return (\r\n        <TodoItem todo={this.state.todos} handleDelete={this.handleDelete} />\r\n      );\r\n    }*/\r\n\r\n    return this.state.todos.map((currentTodo, index) => {\r\n      let id = currentTodo._id;\r\n      //  currentTodo.loader[id] = this.state.loader[id];\r\n      return (\r\n        <TodoItem\r\n          todo={currentTodo}\r\n          itemToDelete={this.state.itemToDelete}\r\n          handleDelete={this.handleDelete}\r\n          key={index}\r\n        />\r\n      );\r\n\r\n      /*return (\r\n        <TodoItem\r\n          todo={currentTodo}\r\n          handleDelete={this.handleDelete}\r\n          key={index}\r\n        />\r\n      );*/\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Document List</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <td>Description</td>\r\n              <td>Tag's</td>\r\n              <td>Document Group</td>\r\n              <td>Attachment</td>\r\n              <td>Actions</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.getList()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodosList from \"./components/todos-list.component\";\nimport logo from \"./logo.svg\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\" target=\"_blank\">\n              <img\n                src={logo}\n                width=\"30\"\n                height=\"30\"\n                alt=\"CodingTheSmartWay.com\"\n              />\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">\n              Rotzler Document Library\n            </Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    Documents\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">\n                    Create Document\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <br />\n          <Route path=\"/\" exact component={TodosList} />\n          <Route path=\"/edit/:id\" component={EditTodo} />\n          <Route path=\"/create\" component={CreateTodo} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}